diff --git a/CMakeLists.txt b/CMakeLists.txt
index 258375d..8d469b5 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -7,8 +7,23 @@ if("${CMAKE_CURRENT_SOURCE_DIR}" STREQUAL "${CMAKE_CURRENT_BINARY_DIR}")
 endif()
 
 find_program(YASM_EXE yasm)
-if(YASM_EXE AND NOT CMAKE_ASM_NASM_COMPILER MATCHES "yasm")
-    set(CMAKE_ASM_NASM_COMPILER ${YASM_EXE})
+option(ENABLE_NASM "Use nasm if available (Uses yasm by default if found)" OFF)
+if(YASM_EXE AND NOT CMAKE_ASM_NASM_COMPILER MATCHES "yasm" AND NOT ENABLE_NASM)
+    set(CMAKE_ASM_NASM_COMPILER "${YASM_EXE}" CACHE FILEPATH "Path to nasm compatible compiler" FORCE)
+else()
+    set(NASM_VERSION "0.0.0")
+    include(CheckLanguage)
+    check_language(ASM_NASM)
+    execute_process(COMMAND ${CMAKE_ASM_NASM_COMPILER} -v
+        OUTPUT_VARIABLE NASM_VERSION
+        ERROR_QUIET
+        OUTPUT_STRIP_TRAILING_WHITESPACE)
+    string(REGEX MATCH "([.0-9])+" NASM_VERSION "${NASM_VERSION}")
+    # NASM_VERSION should now contain something like 2.14.02
+    # Needs to error out on a version less than 2.14
+    if(NASM_VERSION VERSION_LESS "2.14" AND CMAKE_ASM_NASM_COMPILER MATCHES "nasm")
+        message(FATAL_ERROR "Found nasm is too old (requires at least 2.14, found ${NASM_VERSION})!")
+    endif()
 endif()
 
 project(${project_name} C ASM_NASM)
